version: '3.8'

services:
  bot:
    image: bot_image
    depends_on:
      - db
      - db_repl
    networks:
      - custom_network
    env_file:
      - .env
    build: bot/

  db:
    healthcheck:
      test: 'pg_isready -U postgres -d ${DB_DATABASE}'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - 5432:5432
      - 2222:22
    image: db_image
    networks:
      - custom_network
    env_file:
      - .env
    build: 
      context: db/
      dockerfile: Dockerfile
      args:
        - DB_USER=$DB_USER
        - DB_PASSWORD=$DB_PASSWORD
        - DB_HOST=$DB_HOST
        - DB_DATABASE=$DB_DATABASE
        - RM_USER=$RM_USER
        - RM_PASSWORD=$RM_PASSWORD
        - DB_REPL_USER=$DB_REPL_USER

  db_repl:
    healthcheck:
      test: 'pg_isready -U postgres -d ${DB_DATABASE}'
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    ports:
      - 5433:5432
    image: db_repl_image
    depends_on:
      - db
    networks:
      - custom_network
    env_file:
      - .env
    build: 
      context: db_repl/
      dockerfile: Dockerfile
      args:
        - DB_REPL_USER=$DB_REPL_USER
        - DB_REPL_PASSWORD=$DB_REPL_PASSWORD
        - DB_HOST=$DB_HOST
        - DB_REPL_USER=$DB_REPL_USER



networks:
  custom_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/24